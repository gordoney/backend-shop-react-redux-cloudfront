service: import-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1

  environment:
    SQS_URL: "https://sqs.eu-west-1.amazonaws.com/018052809449/catalogItemsQueue"

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-shop-react-redux-cloudfront-uploaded"
    - Effect: "Allow"
      Action: 
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-shop-react-redux-cloudfront-uploaded"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - "arn:aws:sqs:eu-west-1:018052809449:catalogItemsQueue"

package:
  individually: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  importProductsFile:
    handler: handlers/importProductsFile.importProductsFile
    events:
      - http:
          method: "get"
          path: "import"
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: basicAuthorizer
            arn: "arn:aws:lambda:eu-west-1:018052809449:function:authorization-service-dev-basicAuthorizer"
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  importFileParser:
    handler: handlers/importFileParser.importFileParser
    events:
      - s3:
          bucket: aws-shop-react-redux-cloudfront-uploaded
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
